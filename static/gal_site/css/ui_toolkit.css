:root {
    --form-control-color: rgb(220, 220, 220);
    --form-control-color-dark: rgb(120, 120, 120);
    --form-control-color-darker: rgb(81, 81, 81);
    --form-control-disabled: rgb(240, 240, 240);
    --text-color-red: rgb(163, 70, 98);
    --text-color-red-dark: rgb(119, 50, 72);
}

/* Layout options */
.flex-center {
    display: flex;
    align-items: center;
    text-align: center;
}

.flex-center.flex-row {
    justify-content: center;
}

.flex-column {
    flex-direction: column;
}

.flex-row {
    flex-direction: row;
}

.hidden {
    display: none;
}

/* Text styling */
.red {
    color: var(--text-color-red);
}

.dark-red {
    color: var(--text-color-red);
}

/* Remove underline to anchors*/
a {
    text-decoration: none;
}
/* Checkbox label container */
label.checkbox-container {
    font-size: 1rem;
    font-weight: 1;
    line-height: 1.1;
    display: grid;
    grid-template-columns: 1em auto;
    gap: 0.5em;
}

/* Disable default checkbox... */
input[type="checkbox"] {
    /* Add if not using autoprefixer */
    -webkit-appearance: none;
    appearance: none;
    /* For iOS < 15 to remove gradient background */
    background-color: #fff;
    /* Not removed via appearance */
    margin: 0;

    /* ...and substitute it with a custom one*/
    font: inherit;
    color: var(--form-control-color-dark);
    width: 1.25em;
    height: 1.25em;
    border: 0.1em solid var(--form-control-color-dark);
    transform: translateY(-0.075em);

    /* this permits to vertically align checkboxes with the :before element*/
    display: grid;
    place-content: center;
}

/* Add spaces between subsequents checkboxes*/
label.checkbox-container + label.checkbox-container {
    margin-top: 0.5em;
}

/* Add the check sign */
input[type="checkbox"]::before {
    content: "";
    width: 1em;
    height: 1em;
    transform: scale(0);
    /*transition: 120ms transform ease-in-out;*/
    box-shadow: inset 1em 1em var(--form-control-color-dark);
    transform-origin: top left;
    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
}

/* Show the check sign when checked */
input[type="checkbox"]:checked::before {
    transform: scale(1);
}

/*input[type="checkbox"]:focus {*/
/*    outline: max(2px, 0.15em) solid currentColor;*/
/*    outline-offset: max(2px, 0.15em);*/
/*}*/

/* Styles for disabled checkboxes */
input[type="checkbox"]:disabled {
    color: var(--form-control-disabled);
    cursor: not-allowed;
}

/* Add this class to the outer label to disable the checkbox text! */
label.checkbox-container--disabled {
    color: var(--form-control-disabled);
    cursor: not-allowed;
}


/* Style buttons */
.btn {
    height: 72px;
    min-width: 72px;
    background-color: #ffffff; /* Blue background */
    border: 1px solid var(--form-control-color-dark);
    color: var(--form-control-color-dark);
    padding: 8px 12px; /* Some padding */
    font-size: 12px; /* Set a font size */
    cursor: pointer; /* Mouse pointer on hover */
}


.btn > img {
    height: 24px;
    width: 24px;
    object-fit:scale-down;
    padding: 6px
}

.btn.btn-stacked > img,
.btn.btn-stacked > span {
    display: block;
}

/* Add this to align horizontally and vertically */
.btn > img,
.btn > span {
    vertical-align: middle;
    margin: 0 auto;
}

/* Invert colors on active */
.btn.active {
    background: var(--form-control-color);
    color: var(--form-control-color-darker);
}


/*timeline*/
/*.range {*/
/*    position: relative;*/
/*    width: 550px;*/
/*    height: 5px;*/
/*}*/

/*.range input {*/
/*    width: 100%;*/
/*    position: absolute;*/
/*    top: 2px;*/
/*    height: 0;*/
/*    -webkit-appearance: none;*/
/*    -moz-appearance: none;*/
/*}*/
/*.range input::-webkit-slider-thumb {*/
/*    -webkit-appearance: none;*/
/*    -moz-appearance: none;*/
/*    width: 18px;*/
/*    height: 18px;*/
/*    margin: -8px 0 0;*/
/*    border-radius: 50%;*/
/*    background: #37adbf;*/
/*    cursor: pointer;*/
/*    border: 0 !important;*/
/*}*/
/*.range input::-moz-range-thumb {*/
/*    width: 18px;*/
/*    height: 18px;*/
/*    margin: -8px 0 0;*/
/*    border-radius: 50%;*/
/*    background: #37adbf;*/
/*    cursor: pointer;*/
/*    border: 0 !important;*/
/*}*/
/*.range input::-ms-thumb {*/
/*    width: 18px;*/
/*    height: 18px;*/
/*    margin: -8px 0 0;*/
/*    border-radius: 50%;*/
/*    background: #37adbf;*/
/*    cursor: pointer;*/
/*    border: 0 !important;*/
/*}*/
/*.range input::-webkit-slider-runnable-track {*/
/*    width: 100%;*/
/*    height: 2px;*/
/*    cursor: pointer;*/
/*    background: #b2b2b2;*/
/*}*/
/*.range input::-moz-range-track {*/
/*    width: 100%;*/
/*    height: 2px;*/
/*    cursor: pointer;*/
/*    background: #b2b2b2;*/
/*}*/
/*.range input::-ms-track {*/
/*    width: 100%;*/
/*    height: 2px;*/
/*    cursor: pointer;*/
/*    background: #b2b2b2;*/
/*}*/
/*.range input:focus {*/
/*    background: none;*/
/*    outline: none;*/
/*}*/
/*.range input::-ms-track {*/
/*    width: 100%;*/
/*    cursor: pointer;*/
/*    background: transparent;*/
/*    border-color: transparent;*/
/*    color: transparent;*/
/*}*/

/*.range-labels {*/
/*    margin: 18px -41px 0;*/
/*    padding: 0;*/
/*    list-style: none;*/
/*}*/

/*.range-labels li {*/
/*    position: relative;*/
/*    float: left;*/
/*    width: 90.25px;*/
/*    text-align: center;*/
/*    color: #b2b2b2;*/
/*    font-size: 14px;*/
/*    cursor: pointer;*/
/*}*/
/*.range-labels li::before {*/
/*    position: absolute;*/
/*    top: -25px;*/
/*    right: 0;*/
/*    left: 0;*/
/*    content: "";*/
/*    margin: 0 auto;*/
/*    width: 9px;*/
/*    height: 9px;*/
/*    background: #b2b2b2;*/
/*    border-radius: 50%;*/
/*}*/
/*.range-labels .active {*/
/*    color: #37adbf;*/
/*}*/
/*.range-labels .selected::before {*/
/*    background: #37adbf;*/
/*}*/
/*.range-labels .active.selected::before {*/
/*    display: none;*/
/*}*/



input[type=range] {
    -webkit-appearance: none;
    -moz-appearance: none;
    display: block;
    margin: 0;
    width: 100%;
    background: transparent;
}
input[type=range]::-webkit-slider-runnable-track {
    -webkit-appearance: none;
    width: 100%;
    height: 1em;
    color: transparent;
    background: var(--form-control-color);
    border-radius: 999px;
    border: none;
}
input[type=range]::-moz-range-track {
    -webkit-appearance: none;
    -moz-appearance: none;
    width: 100%;
    height: 1em;
    color: transparent;
    background: var(--form-control-color);
    border-radius: 999px;
    border: none;
}
input[type=range]::-ms-track {
    -webkit-appearance: none;
    -moz-appearance: none;
    width: 100%;
    height: 1em;
    color: transparent;
    background: var(--form-control-color);
    border-radius: 999px;
    border: none;
}
input[type=range]::-ms-fill-lower {
    display: none;
}
input[type=range]::-ms-fill-upper {
    display: none;
}
input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 1.5em;
    width: 1em;
    border-radius: 1px;
    border-color: var(--text-color-red);
    background: var(--text-color-red);
    /*box-shadow: 0px 2px 10px -2px black;*/
}
input[type=range]::-moz-range-thumb {
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 1.5em;
    width: 1em;
    border-radius: 0px;
    border-color: var(--text-color-red);
    background: var(--text-color-red);
    /*box-shadow: 0px 2px 10px -2px black;*/
}
input[type=range]::-ms-thumb {
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 1.5em;
    width: 1em;
    border-radius: 1px;
    border-color: var(--text-color-red);
    background: var(--text-color-red);
    /*box-shadow: 0px 2px 10px -2px black;*/
}
.ticks {
    display: flex;
    justify-content: space-between;
    padding: 0.5em 0.5em;
}
.tick {
    position: relative;
    display: flex;
    justify-content: center;
    width: 1px;
    background: var(--form-control-color-dark);
    height: 0.25em;
    line-height: 1.5em;
    margin-bottom: 0.5em;
    color: var(--form-control-color-dark);
}


/* Tooltip */
[data-tooltip] {
    position: relative;
    z-index: 10;
}

/* Positioning and visibility settings of the tooltip */
[data-tooltip]:before,
[data-tooltip]:after {
    position: absolute;
    visibility: hidden;
    opacity: 0;
    left: 50%;
    bottom: calc(100% + 5px); /* 5px is the size of the arrow */
    pointer-events: none;
    transition: 0.2s;
    will-change: transform;
}

/* The actual tooltip with a dynamic width */
[data-tooltip]:before {
    content: attr(data-tooltip);
    padding: 10px 18px;
    min-width: 50px;
    max-width: 300px;
    width: max-content;
    width: -moz-max-content;
    border-radius: 6px;
    font-size: 14px;
    background-color: rgba(59, 72, 80, 0.9);
    background-image: linear-gradient(30deg,
    rgba(59, 72, 80, 0.44),
    rgba(59, 68, 75, 0.44),
    rgba(60, 82, 88, 0.44));
    box-shadow: 0px 0px 24px rgba(0, 0, 0, 0.2);
    color: #fff;
    text-align: center;
    white-space: pre-wrap;
    transform: translate(-50%, -5px) scale(0.5);
}

/* Tooltip arrow */
[data-tooltip]:after {
    content: '';
    border-style: solid;
    border-width: 5px 5px 0px 5px; /* CSS triangle */
    border-color: rgba(55, 64, 70, 0.9) transparent transparent transparent;
    transition-duration: 0s; /* If the mouse leaves the element,
                              the transition effects for the
                              tooltip arrow are "turned off" */
    transform-origin: top;   /* Orientation setting for the
                              slide-down effect */
    transform: translateX(-50%) scaleY(0);
}

/* Tooltip becomes visible at hover */
[data-tooltip]:hover:before,
[data-tooltip]:hover:after {
    visibility: visible;
    opacity: 1;
}
/* Scales from 0.5 to 1 -> grow effect */
[data-tooltip]:hover:before {
    transition-delay: 0.3s;
    transform: translate(-50%, -5px) scale(1);
}
/*
  Arrow slide down effect only on mouseenter (NOT on mouseleave)
*/
[data-tooltip]:hover:after {
    transition-delay: 0.5s; /* Starting after the grow effect */
    transition-duration: 0.2s;
    transform: translateX(-50%) scaleY(1);
}
/*
  That's it for the basic tooltip.

  If you want some adjustability
  here are some orientation settings you can use:
*/

/* LEFT */
/* Tooltip + arrow */
[data-tooltip-location="left"]:before,
[data-tooltip-location="left"]:after {
    left: auto;
    right: calc(100% + 5px);
    bottom: 50%;
}

/* Tooltip */
[data-tooltip-location="left"]:before {
    transform: translate(-5px, 50%) scale(0.5);
}
[data-tooltip-location="left"]:hover:before {
    transform: translate(-5px, 50%) scale(1);
}

/* Arrow */
[data-tooltip-location="left"]:after {
    border-width: 5px 0px 5px 5px;
    border-color: transparent transparent transparent rgba(55, 64, 70, 0.9);
    transform-origin: left;
    transform: translateY(50%) scaleX(0);
}
[data-tooltip-location="left"]:hover:after {
    transform: translateY(50%) scaleX(1);
}



/* RIGHT */
[data-tooltip-location="right"]:before,
[data-tooltip-location="right"]:after {
    left: calc(100% + 5px);
    bottom: 50%;
}

[data-tooltip-location="right"]:before {
    transform: translate(5px, 50%) scale(0.5);
}
[data-tooltip-location="right"]:hover:before {
    transform: translate(5px, 50%) scale(1);
}

[data-tooltip-location="right"]:after {
    border-width: 5px 5px 5px 0px;
    border-color: transparent rgba(55, 64, 70, 0.9) transparent transparent;
    transform-origin: right;
    transform: translateY(50%) scaleX(0);
}
[data-tooltip-location="right"]:hover:after {
    transform: translateY(50%) scaleX(1);
}



/* BOTTOM */
[data-tooltip-location="bottom"]:before,
[data-tooltip-location="bottom"]:after {
    top: calc(100% + 5px);
    bottom: auto;
}

[data-tooltip-location="bottom"]:before {
    transform: translate(-50%, 5px) scale(0.5);
}
[data-tooltip-location="bottom"]:hover:before {
    transform: translate(-50%, 5px) scale(1);
}

[data-tooltip-location="bottom"]:after {
    border-width: 0px 5px 5px 5px;
    border-color: transparent transparent rgba(55, 64, 70, 0.9) transparent;
    transform-origin: bottom;
}


/* Loading spinner */
.spinner {
    margin: 100px auto;
    width: 50px;
    height: 40px;
    text-align: center;
    font-size: 10px;
    opacity: 1;
}

.spinner > div {
    background-color: var(--text-color-red);
    opacity: 1;
    height: 100%;
    width: 6px;
    display: inline-block;
    margin-left: 1px;

    -webkit-animation: sk-stretchdelay 1.2s infinite ease-in-out;
    animation: sk-stretchdelay 1.2s infinite ease-in-out;
}

.spinner .rect2 {
    -webkit-animation-delay: -1.1s;
    animation-delay: -1.1s;
}

.spinner .rect3 {
    -webkit-animation-delay: -1.0s;
    animation-delay: -1.0s;
}

.spinner .rect4 {
    -webkit-animation-delay: -0.9s;
    animation-delay: -0.9s;
}

.spinner .rect5 {
    -webkit-animation-delay: -0.8s;
    animation-delay: -0.8s;
}

@-webkit-keyframes sk-stretchdelay {
    0%, 40%, 100% { -webkit-transform: scaleY(0.4) }
    20% { -webkit-transform: scaleY(1.0) }
}

@keyframes sk-stretchdelay {
    0%, 40%, 100% {
        transform: scaleY(0.4);
        -webkit-transform: scaleY(0.4);
    }  20% {
           transform: scaleY(1.0);
           -webkit-transform: scaleY(1.0);
       }
}
